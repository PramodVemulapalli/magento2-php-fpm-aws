#!/usr/bin/env php
<?php
// This script should run once per 1 minute. NOT once per 2 minute / 3 minute etc.
$file = '/src/app/etc/env.php';
$config = require($file);

$table = 'docker_varnish_hosts';
$ipv4_for_this_ec2 = file_get_contents('http://169.254.169.254/latest/meta-data/local-ipv4');


// Open up connection to RDS.
$dsn = "mysql:host={$config['db']['connection']['default']['host']};port=3306;dbname={$config['db']['connection']['default']['dbname']}";
$username = $config['db']['connection']['default']['username'];
$password = $config['db']['connection']['default']['password'];
$dbh = new PDO($dsn, $username, $password);

$dbh->query("REPLACE INTO `$table` (hostname) VALUES ('$ipv4_for_this_ec2');")->execute();
// if cron script has not run on that specific EC2 within 4 minutes, then we will actually exclude it from env.php cache hosts...
$qry = $dbh->query("SELECT hostname FROM `$table` WHERE last_checked > NOW() - INTERVAL 4 MINUTE");
$qry->execute();

$old_hosts = isset($config['http_cache_hosts']) ? $config['http_cache_hosts'] : array();
$config['http_cache_hosts'] = $qry->fetchAll(PDO::FETCH_COLUMN, 0);

$invalidate_cache = false;
foreach ($config['http_cache_hosts'] as $host) {
    if (!in_array($host, $old_hosts)) {
        $invalidate_cache = true;
        break;
    }
}
foreach ($old_hosts as $host) {
    if (!in_array($host, $config['http_cache_hosts'])) {
        $invalidate_cache = true;
        break;
    }
}

if ($invalidate_cache) {
    echo "Cleared cache config, reason varnish host added or deleted.";
    passthru("/src/bin/magento cache:clean config");
}


$finished = '<?php return ' . var_export($config, true) . ';';
file_put_contents($file, $finished);